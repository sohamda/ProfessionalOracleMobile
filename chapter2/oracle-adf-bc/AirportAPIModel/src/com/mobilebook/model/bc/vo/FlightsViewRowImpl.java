package com.mobilebook.model.bc.vo;

import com.mobilebook.model.bc.vo.common.FlightsViewRow;

import java.math.BigDecimal;

import java.sql.Timestamp;

import java.util.Date;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed May 09 20:43:34 CEST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class FlightsViewRowImpl extends ViewRowImpl implements FlightsViewRow {

    public static final int ENTITY_FLIGHTS = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        FlightNumber,
        DateTime,
        IsArrival,
        Place,
        Airline,
        CheckInDataView,
        AirlinesView1,
        AirportsView1;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int FLIGHTNUMBER = AttributesEnum.FlightNumber.index();
    public static final int DATETIME = AttributesEnum.DateTime.index();
    public static final int ISARRIVAL = AttributesEnum.IsArrival.index();
    public static final int PLACE = AttributesEnum.Place.index();
    public static final int AIRLINE = AttributesEnum.Airline.index();
    public static final int CHECKINDATAVIEW = AttributesEnum.CheckInDataView.index();
    public static final int AIRLINESVIEW1 = AttributesEnum.AirlinesView1.index();
    public static final int AIRPORTSVIEW1 = AttributesEnum.AirportsView1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public FlightsViewRowImpl() {
    }
    
    public void updateFlightDate(Date flightDate){
        setDateTime(new Timestamp(new Date().getTime()));
        getApplicationModule().getTransaction().commit();
    }

    /**
     * Gets Flights entity object.
     * @return the Flights
     */
    public EntityImpl getFlights() {
        return (EntityImpl) getEntity(ENTITY_FLIGHTS);
    }

    /**
     * Gets the attribute value for FLIGHT_NUMBER using the alias name FlightNumber.
     * @return the FLIGHT_NUMBER
     */
    public String getFlightNumber() {
        return (String) getAttributeInternal(FLIGHTNUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for FLIGHT_NUMBER using the alias name FlightNumber.
     * @param value value to set the FLIGHT_NUMBER
     */
    public void setFlightNumber(String value) {
        setAttributeInternal(FLIGHTNUMBER, value);
    }

    /**
     * Gets the attribute value for DATE_TIME using the alias name DateTime.
     * @return the DATE_TIME
     */
    public Timestamp getDateTime() {
        return (Timestamp) getAttributeInternal(DATETIME);
    }

    /**
     * Sets <code>value</code> as attribute value for DATE_TIME using the alias name DateTime.
     * @param value value to set the DATE_TIME
     */
    public void setDateTime(Timestamp value) {
        setAttributeInternal(DATETIME, value);
    }

    /**
     * Gets the attribute value for IS_ARRIVAL using the alias name IsArrival.
     * @return the IS_ARRIVAL
     */
    public String getIsArrival() {
        return (String) getAttributeInternal(ISARRIVAL);
    }

    /**
     * Sets <code>value</code> as attribute value for IS_ARRIVAL using the alias name IsArrival.
     * @param value value to set the IS_ARRIVAL
     */
    public void setIsArrival(String value) {
        setAttributeInternal(ISARRIVAL, value);
    }

    /**
     * Gets the attribute value for PLACE using the alias name Place.
     * @return the PLACE
     */
    public BigDecimal getPlace() {
        return (BigDecimal) getAttributeInternal(PLACE);
    }

    /**
     * Sets <code>value</code> as attribute value for PLACE using the alias name Place.
     * @param value value to set the PLACE
     */
    public void setPlace(BigDecimal value) {
        setAttributeInternal(PLACE, value);
    }

    /**
     * Gets the attribute value for AIRLINE using the alias name Airline.
     * @return the AIRLINE
     */
    public BigDecimal getAirline() {
        return (BigDecimal) getAttributeInternal(AIRLINE);
    }

    /**
     * Sets <code>value</code> as attribute value for AIRLINE using the alias name Airline.
     * @param value value to set the AIRLINE
     */
    public void setAirline(BigDecimal value) {
        setAttributeInternal(AIRLINE, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link CheckInDataView.
     */
    public RowIterator getCheckInDataView() {
        return (RowIterator) getAttributeInternal(CHECKINDATAVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AirlinesView1.
     */
    public RowSet getAirlinesView1() {
        return (RowSet) getAttributeInternal(AIRLINESVIEW1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> AirportsView1.
     */
    public RowSet getAirportsView1() {
        return (RowSet) getAttributeInternal(AIRPORTSVIEW1);
    }
}

